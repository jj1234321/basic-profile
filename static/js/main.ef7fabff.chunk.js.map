{"version":3,"sources":["iron.jpg","Cheesey2.webp","headshotimage.jpg","resume.PNG","siemens-logo.png","code-snippet.PNG","logo.svg","Headshot.js","HeadshotListMember.js","HeadshotResult.js","ResultsSection.js","Overview.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Headshot","name","this","props","item","window","setTimeout","nameBox","document","getElementById","nameElement","classList","remove","className","id","src","headshot","Component","HeadshotListMember","match","to","HeadshotResult","newImg","createElement","picture","console","log","height","width","replace","Overview","textToDisplay","coreText","aboutme","experiences","resume","projects","resumePic","siemensLogo","codeSnippet","App","mapStyles","styles","opacity","transform","scale","bounce","val","spring","stiffness","damping","bounceTransition","atEnter","atLeave","atActive","resultPages","x","push","key","path","component","itemList","style","textDecoration","exact","Boolean","location","hostname","mockData1","traits","Cheesy2","owner","mockData2","Iron","mockData3","mockData4","mockData5","mockData6","mockData7","mockData8","mockArray","mockArray2","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ef7fabff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/iron.f341f4e4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Cheesey2.b103d706.webp\";","module.exports = __webpack_public_path__ + \"static/media/headshotimage.71e2272d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/resume.cf68c05c.PNG\";","module.exports = __webpack_public_path__ + \"static/media/siemens-logo.4f915178.png\";","module.exports = __webpack_public_path__ + \"static/media/code-snippet.e59b2846.PNG\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport './Headshot.css';\r\n\r\nclass Headshot extends Component {\r\n    //Should have item in props.\r\n    render() {\r\n\r\n        let name = this.props.item.name\r\n        window.setTimeout(function () {\r\n            let nameBox = document.getElementById(\"name-box-\" + name);\r\n            let nameElement = document.getElementById(\"name-\" + name);\r\n            if (nameBox && nameElement) {\r\n                nameElement.classList.remove('invisible');\r\n                nameBox.classList.remove('invisible');\r\n\r\n            }\r\n        }, 500);\r\n\r\n        return (\r\n            <span className=\"headshot\">\r\n                <span id={\"name-box-\" + this.props.item.name} className=\"name-box invisible\">\r\n                    <span id={\"name-\" + this.props.item.name} className=\"name-focus invisible\">\r\n                        {this.props.item.name}\r\n                    </span>\r\n                </span>\r\n                <img className=\"image-box\" id=\"imgFull\" src={this.props.item.headshot} />\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Headshot; ","import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Link\r\n} from 'react-router-dom'\r\nimport Headshot from './Headshot';\r\n\r\nconst HeadshotListMember = ({ match, item }) => (\r\n        <Link to={`/${item.name}`}>\r\n            <Headshot item={item}/>\r\n        </Link>\r\n)\r\nexport default HeadshotListMember;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport './HeadshotResult.css';\r\n\r\nclass HeadshotResult extends Component {\r\n\r\n    componentDidMount() {\r\n        let newImg = document.createElement('img');\r\n        newImg.src = this.props.item.picture;\r\n        console.log(newImg.height);\r\n        console.log(newImg.width);\r\n        console.log(newImg);\r\n        if (newImg.width > newImg.height) {\r\n            let currentImage = document.getElementById('img-' + this.props.item.name);\r\n            currentImage.classList.replace('relevant-image-vertical', 'relevant-image-horizontal');\r\n\r\n        }\r\n    }\r\n    //Should have item in props.\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"result-page\" id={this.props.item.name}>\r\n                <div className=\"inner-information\">\r\n                    <img src={this.props.item.picture} id={\"img-\" + this.props.item.name} className=\"relevant-image-vertical\">\r\n                    </img>\r\n                    <br />\r\n                    <div className=\"text-field\">\r\n                        <div className=\"info-field\">\r\n                            <br />\r\n                            Name: {this.props.item.name}\r\n                        </div>\r\n                        <div className=\"info-field\">\r\n                            Role: {this.props.item.name}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeadshotResult; ","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport HeadshotListMember from \"./HeadshotListMember\";\r\n\r\nclass ResultsSection extends Component {\r\n    //Should have items in props.\r\n    inWords(num) {\r\n        let a = ['', 'one ', 'two ', 'three ', 'four ', 'five ', 'six ', 'seven ', 'eight ', 'nine ', 'ten ', 'eleven ', 'twelve ', 'thirteen ', 'fourteen ', 'fifteen ', 'sixteen ', 'seventeen ', 'eighteen ', 'nineteen '];\r\n        let b = ['', '', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];\r\n    \r\n        if ((num = num.toString()).length > 9) return 'overflow';\r\n        let n = ('000000000' + num).substr(-9).match(/^(\\d{2})(\\d{2})(\\d{2})(\\d{1})(\\d{2})$/);\r\n        if (!n) return; var str = '';\r\n        str += (n[1] != 0) ? (a[Number(n[1])] || b[n[1][0]] + ' ' + a[n[1][1]]) + 'crore ' : '';\r\n        str += (n[2] != 0) ? (a[Number(n[2])] || b[n[2][0]] + ' ' + a[n[2][1]]) + 'lakh ' : '';\r\n        str += (n[3] != 0) ? (a[Number(n[3])] || b[n[3][0]] + ' ' + a[n[3][1]]) + 'thousand ' : '';\r\n        str += (n[4] != 0) ? (a[Number(n[4])] || b[n[4][0]] + ' ' + a[n[4][1]]) + 'hundred ' : '';\r\n        str += (n[5] != 0) ? ((str != '') ? 'and ' : '') + (a[Number(n[5])] || b[n[5][0]] + ' ' + a[n[5][1]]) + 'only ' : '';\r\n        return str;\r\n    }\r\n    render() {\r\n        let x = 0;\r\n        let listPreppedForRender = [];\r\n\r\n        if (this.props.items.length > 0) {\r\n            for (var item of this.props.items) {\r\n                x = x + 1;\r\n                listPreppedForRender.push(<span className=\"headshot-box\"><HeadshotListMember match={this.props.match} item={item} key={this.inWords(x)}/></span>);\r\n            }\r\n        }\r\n\r\n        return listPreppedForRender;\r\n    }\r\n}\r\n\r\nexport default ResultsSection; ","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport './Overview.css';\r\nimport { aboutme } from './aboutme.json';\r\nimport { experiences } from './experiences.json';\r\nimport { resume } from './resume.json';\r\nimport { projects } from './projects.json';\r\nimport headshot from './headshotimage.jpg';\r\nimport resumePic from './resume.PNG';\r\nimport siemensLogo from './siemens-logo.png';\r\nimport codeSnippet from './code-snippet.PNG';\r\n\r\nclass Overview extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    //Should have item in props.\r\n    render() {\r\n    \r\n        let textToDisplay = null;\r\n        if(this.props.coreText == \"aboutme\"){\r\n            textToDisplay = aboutme;\r\n        }\r\n        if(this.props.coreText == \"experiences\"){\r\n            textToDisplay = experiences;\r\n        }\r\n        if(this.props.coreText == \"resume\"){\r\n            textToDisplay = resume;\r\n        }\r\n        if(this.props.coreText == \"projects\"){\r\n            textToDisplay = projects;\r\n        }\r\n        if(!textToDisplay){\r\n            textToDisplay = \"Failed to load\"\r\n            console.log(this.props.coreText)\r\n        }\r\n        return (\r\n            <span className=\"overview-page-outer\">\r\n            <span className=\"overview-page-inner\">\r\n            {this.props.coreText == \"aboutme\" ? <div className=\"headshot-image\"><img src={headshot} width=\"50%\"/></div> : null}\r\n            {this.props.coreText == \"resume\" ? <div className=\"headshot-image resume\"><img src={resumePic} /></div> : null}\r\n            {this.props.coreText == \"experiences\" ? <div className=\"headshot-image\"><img src={siemensLogo} /></div> : null}\r\n            {this.props.coreText == \"projects\" ? <div className=\"headshot-image\"><img src={codeSnippet} /></div> : null}\r\n            <br />\r\n            <div className=\"message-content\" >\r\n            {textToDisplay}\r\n            </div>\r\n            </span>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Overview;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport ResultsSection from './ResultsSection';\r\nimport HeadshotResult from './HeadshotResult';\r\nimport { spring, AnimatedRoute } from 'react-router-transition';\r\nimport Overview from './Overview';\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Link\r\n} from 'react-router-dom'\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n  }\r\n  //Should have itemList in props. \r\n  render() {\r\n\r\n    // we need to map the `scale` prop we define below\r\n    // to the transform style property\r\n    function mapStyles(styles) {\r\n      return {\r\n        opacity: styles.opacity,\r\n        transform: `scale(${styles.scale})`,\r\n      };\r\n    }\r\n\r\n    // wrap the `spring` helper to use a bouncy config\r\n    function bounce(val) {\r\n      return spring(val, {\r\n        stiffness: 330,\r\n        damping: 22,\r\n      });\r\n    }\r\n\r\n    // child matches will...\r\n    const bounceTransition = {\r\n      // start in a transparent, upscaled state\r\n      atEnter: {\r\n        opacity: 0,\r\n        scale: 1.2,\r\n      },\r\n      // leave in a transparent, downscaled state\r\n      atLeave: {\r\n        opacity: bounce(0),\r\n        scale: bounce(0.8),\r\n      },\r\n      // and rest at an opaque, normally-scaled state\r\n      atActive: {\r\n        opacity: bounce(1),\r\n        scale: bounce(1),\r\n      },\r\n    };\r\n\r\n    const AboutMe = () => (\r\n      <div>\r\n        <Overview coreText=\"aboutme\"/>\r\n      </div>\r\n    )\r\n\r\n    const CoopExperiences = () => (\r\n      <div>\r\n        <Overview coreText=\"experiences\"/>\r\n      </div>\r\n    )\r\n\r\n    const Resume = () => (\r\n      <div>\r\n        <Overview coreText=\"resume\" />\r\n      </div>\r\n    )\r\n\r\n    const Projects = () => (\r\n      <div>\r\n        <Overview coreText=\"projects\" />\r\n      </div>\r\n    )\r\n\r\n    const Topic = ({ match }) => (\r\n      <div>\r\n        <h3>{match.params.topicId}</h3>\r\n      </div>\r\n    )\r\n\r\n    let resultPages = []\r\n    let x = 0;\r\n    //Setup pages of individuals to display.\r\n    for (let item of this.props.itemList) {\r\n      x = x+1;\r\n      resultPages.push(<AnimatedRoute\r\n        atEnter={bounceTransition.atEnter}\r\n        atLeave={bounceTransition.atLeave}\r\n        atActive={bounceTransition.atActive}\r\n        mapStyles={mapStyles} \r\n        className=\"route-wrapper\"  key={x} path={`/${item.name}`} \r\n        component={() => <HeadshotResult item={item} />} />);\r\n    }\r\n\r\n    return (\r\n\r\n      <div className=\"App\">\r\n        <Router>\r\n          <div className=\"App\">\r\n            <header className=\"App-header\">\r\n              <button className=\"basic-button\"><Link to=\"/\" style={{ textDecoration: 'none' }}>About Me</Link></button>\r\n              <button className=\"basic-button\"><Link to=\"/coopexperiences\" style={{ textDecoration: 'none' }}>Co-op Experiences</Link></button>\r\n              <button className=\"basic-button\"><Link to=\"/resume\" style={{ textDecoration: 'none' }}>Resume</Link></button>\r\n              <button className=\"basic-button\"><Link to=\"/projects\" style={{ textDecoration: 'none' }}>Projects</Link></button>\r\n\r\n            </header>\r\n            <div id=\"main\" className=\"App-body\">\r\n                <div className=\"header-line\">{\"Career Profile - James Harper\"}</div>\r\n                <div id=\"route-list\">\r\n                  <AnimatedRoute\r\n                atEnter={bounceTransition.atEnter}\r\n                atLeave={bounceTransition.atLeave}\r\n                atActive={bounceTransition.atActive}\r\n                mapStyles={mapStyles} \r\n                className=\"route-wrapper\" exact path=\"/\" component={AboutMe} />\r\n                  <AnimatedRoute\r\n                atEnter={bounceTransition.atEnter}\r\n                atLeave={bounceTransition.atLeave}\r\n                atActive={bounceTransition.atActive}\r\n                mapStyles={mapStyles} \r\n                className=\"route-wrapper\" path=\"/coopexperiences\" component={CoopExperiences} />\r\n                <AnimatedRoute\r\n              atEnter={bounceTransition.atEnter}\r\n              atLeave={bounceTransition.atLeave}\r\n              atActive={bounceTransition.atActive}\r\n              mapStyles={mapStyles} \r\n              className=\"route-wrapper\" path=\"/resume\" component={Resume} />\r\n              <AnimatedRoute\r\n            atEnter={bounceTransition.atEnter}\r\n            atLeave={bounceTransition.atLeave}\r\n            atActive={bounceTransition.atActive}\r\n            mapStyles={mapStyles} \r\n            className=\"route-wrapper\" path=\"/projects\" component={Projects} />\r\n                  {resultPages}\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Cheesy2 from './Cheesey2.webp';\r\nimport Iron from './iron.jpg';\r\n\r\nlet mockData1 = {\r\n    name : 'Cheese',\r\n    traits : 'none',\r\n    picture : Cheesy2,\r\n    headshot : Cheesy2,\r\n    owner : 'none'\r\n}\r\n\r\nlet mockData2 = {\r\n    name : 'Iron',\r\n    traits : 'none',\r\n    picture : Iron,\r\n    headshot : Iron,\r\n    owner : 'none'\r\n}\r\n\r\nlet mockData3 = {\r\n    name : 'Iron2',\r\n    traits : 'none',\r\n    picture : Iron,\r\n    headshot : Iron,\r\n    owner : 'none'\r\n}\r\n\r\nlet mockData4= {\r\n    name : 'Iron3',\r\n    traits : 'none',\r\n    picture : Iron,\r\n    headshot : Iron,\r\n    owner : 'none'\r\n}\r\n\r\nlet mockData5 = {\r\n    name : 'Cheese',\r\n    traits : 'none',\r\n    picture : Cheesy2,\r\n    headshot : Cheesy2,\r\n    owner : 'none'\r\n}\r\n\r\nlet mockData6 = {\r\n    name : 'Iron',\r\n    traits : 'none',\r\n    picture : Iron,\r\n    headshot : Iron,\r\n    owner : 'none'\r\n}\r\n\r\nlet mockData7 = {\r\n    name : 'Iron2',\r\n    traits : 'none',\r\n    picture : Iron,\r\n    headshot : Iron,\r\n    owner : 'none'\r\n}\r\n\r\nlet mockData8= {\r\n    name : 'Iron3',\r\n    traits : 'none',\r\n    picture : Iron,\r\n    headshot : Iron,\r\n    owner : 'none'\r\n}\r\n\r\nlet mockArray = [];\r\nlet mockArray2 = []\r\nmockArray.push(mockData1);\r\nmockArray.push(mockData2);\r\nmockArray.push(mockData3);\r\nmockArray.push(mockData4);\r\nmockArray.push(mockData5);\r\nmockArray.push(mockData6);\r\nmockArray.push(mockData7);\r\nmockArray.push(mockData8);\r\n\r\n\r\nfor (var item of mockArray) {\r\n    mockArray2.push(item);\r\n}\r\nReactDOM.render(<App itemList={mockArray}/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}